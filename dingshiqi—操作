1.sql定时器 可以直接查询发送到桌面 也可以直接绑定邮箱 直接发对方邮箱或者多个邮箱
以navicat16为例：
1.点击最上面的一排的’查询‘，然后’新建查询‘，写上查询语句’select * from xxxx‘，然后先保存一下。
保存之后随便命名。
2.然后点击’导出结果‘，然后点击’导出已保存的查询‘，然后就正常的导出流程，一直到点击’开始‘之前，
左下角’保存‘按钮亮了，此时点击’保存‘，然后命名。
3.继续点击最上面一排的’自动运行‘，然后点击’新建批处理作业‘，然后把点击’导出‘，把刚才的新建的查询拖动上去
然后保存一个名字即可。这时候还没有添加时间触发器。
4.点击’设置任务计划‘，选择’触发器‘，新建，可以设置每天、一次等等。设置完了就可以自动执行了，只要navicat开着。


2.python脚本定时器
比如我的脚本名字为data 那么在桌面新建一个txt 里面内容为 python data.py 想多个文件按顺序执行 按照如下方式即可
python data.py
python data1.py
然后把这个txt文件重命名为bat文件。
然后点击 此电脑，右键 更多，然后管理，系统工具，任务计划程序，任务计划程序库，右面的创建任务，操作，新建，
把刚才那个bat文件放到’程序或脚本‘下，这里需要注意，bat文件的位置要跟py文件的位置在同一个文件夹下。添加参数
与上面的链接的位置一样，起始于 到data.py的前一个文件夹的位置 比如 c/user/data.py 现在就是c/user/
最后设置触发器 就是什么时候触发即完成。



3.基于python自带shcedule模块 
import schedule
import ceshi
import time
# def job():
#     print("我正在工作  Starting")
# schedule.every(5).to(10).seconds.do(ceshi.job)  另一个文件的函数 每隔5-10s钟执行一次脚本
schedule.every().wednesday.at("10:17").do(ceshi.job)  每周三的10点17分执行脚本
while True:
    schedule.run_pending()  想一直运行 必须得有while true 自循环 run_pending 运行待处理的
# schedule.every(10).seconds.do(job)
# schedule.every(10).minutes.do(job)
# schedule.every().hour.do(job)
# schedule.every().day.at("10:30").do(job)
# schedule.every(5).to(10).minutes.do(job)
# schedule.every().monday.do(job)
# schedule.every().wednesday.at("13:15").do(job)
# schedule.every().minute.at(":17").do(job)
